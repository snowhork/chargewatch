// Code generated by goa v3.2.6, DO NOT EDIT.
//
// chargewatch client
//
// Command:
// $ goa gen chargewatch/design

package chargewatch

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "chargewatch" service client.
type Client struct {
	ListDevicesEndpoint      goa.Endpoint
	CreateDeviceEndpoint     goa.Endpoint
	UpdateChargeEndpoint     goa.Endpoint
	GetChargeHistoryEndpoint goa.Endpoint
	UpdateDeviceEndpoint     goa.Endpoint
}

// NewClient initializes a "chargewatch" service client given the endpoints.
func NewClient(listDevices, createDevice, updateCharge, getChargeHistory, updateDevice goa.Endpoint) *Client {
	return &Client{
		ListDevicesEndpoint:      listDevices,
		CreateDeviceEndpoint:     createDevice,
		UpdateChargeEndpoint:     updateCharge,
		GetChargeHistoryEndpoint: getChargeHistory,
		UpdateDeviceEndpoint:     updateDevice,
	}
}

// ListDevices calls the "listDevices" endpoint of the "chargewatch" service.
func (c *Client) ListDevices(ctx context.Context, p *ListDevicesPayload) (res *ListDevicesResult, err error) {
	var ires interface{}
	ires, err = c.ListDevicesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListDevicesResult), nil
}

// CreateDevice calls the "createDevice" endpoint of the "chargewatch" service.
// CreateDevice may return the following errors:
//	- "StatusInternalServerError" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) CreateDevice(ctx context.Context, p *CreateDevicePayload) (res *CreateDeviceResult, err error) {
	var ires interface{}
	ires, err = c.CreateDeviceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateDeviceResult), nil
}

// UpdateCharge calls the "updateCharge" endpoint of the "chargewatch" service.
// UpdateCharge may return the following errors:
//	- "StatusInternalServerError" (type *goa.ServiceError)
//	- "StatusBadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) UpdateCharge(ctx context.Context, p *UpdateChargePayload) (res *UpdateChargeResult, err error) {
	var ires interface{}
	ires, err = c.UpdateChargeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdateChargeResult), nil
}

// GetChargeHistory calls the "getChargeHistory" endpoint of the "chargewatch"
// service.
func (c *Client) GetChargeHistory(ctx context.Context, p *GetChargeHistoryPayload) (res *GetChargeHistoryResult, err error) {
	var ires interface{}
	ires, err = c.GetChargeHistoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetChargeHistoryResult), nil
}

// UpdateDevice calls the "updateDevice" endpoint of the "chargewatch" service.
func (c *Client) UpdateDevice(ctx context.Context, p *UpdateDevicePayload) (res *UpdateDeviceResult, err error) {
	var ires interface{}
	ires, err = c.UpdateDeviceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdateDeviceResult), nil
}
