// Code generated by goa v3.2.6, DO NOT EDIT.
//
// chargewatch endpoints
//
// Command:
// $ goa gen chargewatch/design

package chargewatch

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "chargewatch" service endpoints.
type Endpoints struct {
	Healthcheck      goa.Endpoint
	ListDevices      goa.Endpoint
	CreateDevice     goa.Endpoint
	UpdateCharge     goa.Endpoint
	GetChargeHistory goa.Endpoint
	UpdateDevice     goa.Endpoint
}

// NewEndpoints wraps the methods of the "chargewatch" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Healthcheck:      NewHealthcheckEndpoint(s),
		ListDevices:      NewListDevicesEndpoint(s),
		CreateDevice:     NewCreateDeviceEndpoint(s),
		UpdateCharge:     NewUpdateChargeEndpoint(s),
		GetChargeHistory: NewGetChargeHistoryEndpoint(s),
		UpdateDevice:     NewUpdateDeviceEndpoint(s),
	}
}

// Use applies the given middleware to all the "chargewatch" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Healthcheck = m(e.Healthcheck)
	e.ListDevices = m(e.ListDevices)
	e.CreateDevice = m(e.CreateDevice)
	e.UpdateCharge = m(e.UpdateCharge)
	e.GetChargeHistory = m(e.GetChargeHistory)
	e.UpdateDevice = m(e.UpdateDevice)
}

// NewHealthcheckEndpoint returns an endpoint function that calls the method
// "healthcheck" of service "chargewatch".
func NewHealthcheckEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Healthcheck(ctx)
	}
}

// NewListDevicesEndpoint returns an endpoint function that calls the method
// "listDevices" of service "chargewatch".
func NewListDevicesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ListDevicesPayload)
		return s.ListDevices(ctx, p)
	}
}

// NewCreateDeviceEndpoint returns an endpoint function that calls the method
// "createDevice" of service "chargewatch".
func NewCreateDeviceEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CreateDevicePayload)
		return s.CreateDevice(ctx, p)
	}
}

// NewUpdateChargeEndpoint returns an endpoint function that calls the method
// "updateCharge" of service "chargewatch".
func NewUpdateChargeEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*UpdateChargePayload)
		return s.UpdateCharge(ctx, p)
	}
}

// NewGetChargeHistoryEndpoint returns an endpoint function that calls the
// method "getChargeHistory" of service "chargewatch".
func NewGetChargeHistoryEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetChargeHistoryPayload)
		return s.GetChargeHistory(ctx, p)
	}
}

// NewUpdateDeviceEndpoint returns an endpoint function that calls the method
// "updateDevice" of service "chargewatch".
func NewUpdateDeviceEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*UpdateDevicePayload)
		return s.UpdateDevice(ctx, p)
	}
}
